#!/bin/bash
source /home/pi/scripts/usb_webcam.sh

########################## CONFIGURATION #################################################
VIDEO_DEVICE=
VIDEO_RESOLUTION=
VIDEO_FRAMERATE=
STREAMER_HOME=/home/pi/mjpg-streamer/mjpg-streamer-experimental

######################### WEBCAM AUTO-DETECTION ##########################################
# Detect webcam if not previously provided
# ex: /dev/video0
if [ -z "$VIDEO_DEVICE" ]; then
  VIDEO_DEVICE=$(webcam.identify)
fi

# Identify highest resolution for webcam unless previously provided
# ex: 1920x1080
if [ -z "$VIDEO_RESOLUTION" ] && [ -n "$VIDEO_DEVICE" ]; then
  VIDEO_RESOLUTION=$(webcam.max_resolution "$VIDEO_DEVICE")
fi

# Identify highest framerate for webcam if not previously provided
# ex: 30.000
if [ -z "$VIDEO_FRAMERATE" ] && [ -n "$VIDEO_DEVICE" ] && [ -n "$VIDEO_DEVICE" ]; then
  VIDEO_FRAMERATE=$(webcam.max_fps "$VIDEO_DEVICE" "$VIDEO_RESOLUTION")
fi

######################### WAIT FOR WEBCAM  ###############################################
# If webcam cannot be found, attempt to identify available webcam (poll 1 min)
if [ -z "$VIDEO_DEVICE" ] || [ ! -e "$VIDEO_DEVICE" ]; then
  counter=0
  while [ ! -e "$VIDEO_DEVICE" ] && [ $counter -lt 30 ]; do
    sleep 2
    counter=$((counter + 1))
    VIDEO_DEVICE=$(webcam.identify)

    if [ ! -e "$VIDEO_DEVICE" ]; then
      echo "$counter => Webcam not detected"
    fi
  done
fi

# If a usb webcam device was not found, exit
if [ ! -e "$VIDEO_DEVICE" ]; then
  echo "Webcam not detected... exiting(1)"
  exit 1
else
  # Print detected webcam device info
  webcam.info "$VIDEO_DEVICE"
fi

######################### VALIDATE RES and FPS  ##########################################
resolutions=($(webcam.resolutions "$VIDEO_DEVICE"))
if [ -z "$VIDEO_RESOLUTION" ] || [[ ! "${resolutions[*]}" =~ ${VIDEO_RESOLUTION} ]]; then
  echo "Unsupported Resolution: [$VIDEO_RESOLUTION]"
  VIDEO_RESOLUTION=$(webcam.max_resolution "$VIDEO_DEVICE")
fi

frame_rates=($(webcam.fps "$VIDEO_DEVICE" "$VIDEO_RESOLUTION"))
if [ -z "$VIDEO_FRAMERATE" ] || [[ ! "${frame_rates[*]}" =~ ${VIDEO_FRAMERATE} ]]; then
  echo "Unsupported Frame Rate: [$VIDEO_FRAMERATE]"
  VIDEO_FRAMERATE=$(webcam.max_fps "$VIDEO_DEVICE" "$VIDEO_RESOLUTION")
fi

######################### START WEBCAM  ##################################################
INPUT_OPTIONS="input_uvc.so -d $VIDEO_DEVICE -r $VIDEO_RESOLUTION -f $VIDEO_FRAMERATE"
OUTPUT_OPTIONS="output_http.so -w ./www"

while [ -e "$VIDEO_DEVICE" ]; do
  cd $STREAMER_HOME || exit 2
  echo "Running: ./mjpg_streamer -i $INPUT_OPTIONS -o $OUTPUT_OPTIONS"
  LD_LIBRARY_PATH=. ./mjpg_streamer -i "$INPUT_OPTIONS" -o "$OUTPUT_OPTIONS"
  # sleep 2 minutes
  sleep 120
done

echo "Webcam disconnected... exiting(0)"
exit 0;