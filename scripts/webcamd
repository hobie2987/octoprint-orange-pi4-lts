#!/bin/bash

# VIDEO DEVICE CONFIGURATION
# - Grab first devname of detected webcam device
VIDEO_DEVICE=$(v4l2-ctl --list-devices | grep -om 1 "/dev/video[0-9]")
VIDEO_MODEL=$(udevadm info --query=property --name="$VIDEO_DEVICE" | grep  "ID_MODEL=" | cut -d = -f 2)
#TODO - Dynamically populate resolution and frame rate
VIDEO_RESOLUTION="1920x1080"
VIDEO_FRAME_RATE="30"

# MJPG STREAMER SETTINGS
STREAMER_HOME=/home/pi/mjpg-streamer/mjpg-streamer-experimental
INPUT_OPTIONS="input_uvc.so -d $VIDEO_DEVICE -r $VIDEO_RESOLUTION -f $VIDEO_FRAME_RATE"
OUTPUT_OPTIONS="output_http.so -w ./www"

function log_config() {
  echo "**************************************"
  echo "*       Starting USB webcam          *"
  echo "**************************************"
  echo "Device Model: $VIDEO_MODEL"
  echo "Device Name: $VIDEO_DEVICE"
  echo "Resolution: $VIDEO_RESOLUTION"
  echo "Frame Rate: $VIDEO_FRAME_RATE fps"
  echo "MJPG Streamer Home: $STREAMER_HOME"
  echo "Input: $INPUT_OPTIONS"
  echo "Output: $OUTPUT_OPTIONS"
  echo "Running: ./mjpg_streamer -i $INPUT_OPTIONS -o $OUTPUT_OPTIONS"
  echo "**************************************"
}

# starts up the USB webcam
function start_usb_webcam() {
  pushd $STREAMER_HOME || exit 2
  LD_LIBRARY_PATH=. ./mjpg_streamer -i "$INPUT_OPTIONS" -o "$OUTPUT_OPTIONS"
  popd  || exit 3
}

# keep mjpg streamer running if some camera is attached
while true; do
 log_config
 if [ -e "$VIDEO_DEVICE" ] ; then
   start_usb_webcam
 else
   echo "$VIDEO_DEVICE not found"
   exit 1
 fi
 # sleep 2 minutes
 sleep 120
done
